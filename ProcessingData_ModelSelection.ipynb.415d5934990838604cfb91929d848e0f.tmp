###########################################################################
## K Nearest Neighbour Results:
###########################################################################

# Define the model:
knn_model_kd = KNeighborsClassifier()
target_names_kd = ['Stayed', 'Churned']

# summarize results without using gridsarch
knn_model_kd.fit(X_n_train_kd, y_train_kd)
predictions_knn_kd = knn_model_kd.predict(X_n_test_kd)
print('//////////////////////////////////////////////////////////////////')
print("Classification report of knn model without the use of GridSearch:")
print('//////////////////////////////////////////////////////////////////')
print(classification_report(y_test_kd, predictions_knn_kd, target_names=target_names_kd))

# Summarize results with using gridsearch
# (tune) the model with GridSearch and Stratify kfold:
# key parameters:
n_neighbors_kd = range(1, 21, 2)
weights_kd = ['uniform', 'distance']
metric_kd = ['euclidean', 'manhattan', 'minkowski']

# store parameters in parameter object:
param_grid_knn_kd = dict(n_neighbors=n_neighbors_kd, weights=weights_kd, metric=metric_kd)

# Evaluation
cv_knn_kd = RepeatedStratifiedKFold(n_splits=10, n_repeats=3, random_state=1)

# define grid search estimator:
grid_search_knn_kd = GridSearchCV(estimator=knn_model_kd, param_grid=param_grid_knn_kd, n_jobs=-1, cv=cv_knn_kd, scoring='accuracy', error_score=0)

# fit the grid search using the grid search estimator with the train data:
# This will take the KNN model and try each combination of parameters
grid_search_knn_kd.fit(X_n_train_kd, y_train_kd)
grid_predictions_knn_kd = grid_search_knn_kd.predict(X_n_test_kd)
print('//////////////////////////////////////////////////////////////////')
print('Classification report of knn model with the use of GridSearch:')
print('//////////////////////////////////////////////////////////////////')
print('Test Accuracy: %f, Grid Result: %s' % (grid_search_knn_kd.best_score_, grid_search_knn_kd.best_params_))
print(classification_report(y_test_kd, grid_predictions_knn_kd, target_names=target_names_kd))